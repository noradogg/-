% 人間がロボットを手伝う
% 方法1

function CASE2_METHOD1()

% Clear and close everything
%clear all; close all; fclose all;

% Run setup.m
setup;

% Set a folder name
init('CASE2_METHOD1');

global robot;
global human;

% Creat G1 (DES)
robot(1).Q = 72; % number of states
       % the initial state q0 is always labeled "0"
robot(1).Qm = (71); % marker state set
robot(1).delta = [0,15,4;
          4,15,14;
          14,15,24;
          22,15,32;
          23,17,22;
          24,17,23;
          32,108,32; % 108 : load with help of human.
          32,15,42;
          42,13,43;
          43,13,44;
          44,15,54;
          54,15,64;
          64,15,71]; % transition triples (exit state, event, enter state)

% %棚からゴールまでの分岐一つ増やす
% robot(1).delta = [0,15,4;
%           4,15,14;
%           14,15,24;
%           22,15,32;
%           23,17,22;
%           24,17,23;
%           32,108,32; % 108 : load with help of human.
%           32,15,42;
%           41,15,51;%
%           42,17,41;%
%           51,15,61;%
%           61,13,62;%
%           62,13,63;%
%           
%           42,13,43;
%           43,13,44;
%           44,15,54;
%           54,15,64;
%           64,17,63;%
%           63,15,71];%
%           % transition triples (exit state, event, enter state)

create('G1', robot(1).Q, robot(1).delta, robot(1).Qm); % create G1


% Creat G2 (DES)
robot(2).Q = 72; % number of states
       % the initial state q0 is always labeled "0"
robot(2).Qm = (71); % marker state set
robot(2).delta = [0,25,6;
         6,27,5;
         5,27,4;
         4,25,14;
         14,25,24;
         24,27,23;
         23,25,33;
         33,25,43;
         43,23,44;
         44,23,45;
         44,25,54;
         45,23,46;
         46,23,47;
         47,25,57;
         54,25,64;
         57,25,67;
         64,23,65;
         65,23,66;
         66,23,67;
         67,23,68;
         68,25,71]; % transition triples (exit state, event, enter state)
         
create('G2', robot(2).Q, robot(2).delta, robot(2).Qm); % create G2


%Create human1
human.Q = 172; % 31 : waiting at state 31.  73 : helping be completed at state 31. 
human.Qm = (171);
human.delta = [0,100,66;
           66,106,65;
           65,106,64;
           64,100,54;
           54,100,44;
           44,106,43;
           43,106,42;
           42,106,41;
           64,106,63;
           63,106,62;
           62,106,61;
           61,100,51;
           51,100,41;
           41,100,31;
           31,108,131; % helping be completed
           131,104,141;
           141,102,142;
           142,102,143;
           143,102,144;
           144,104,154;
           154,104,164;
           141,104,151;
           151,104,161;
           161,102,162;
           162,102,163;
           163,102,164;
           164,102,165;
           165,102,166;
           166,104,171;
           171,109,171];

create('H1', human.Q, human.delta, human.Qm); % create human1


%Synchronous G1,G2 and G3
sync('G', 'G1', 'G2'); % synchronous product by sync
sync('PLANT', 'G', 'H1')

ban.Q=2;
ban.Qm=(1);
ban.delta=[0,109,1]; % 0(人間が倉庫にいる状態) -> 1(人間が受理状態)
create('Eban',ban.Q,ban.delta,ban.Qm);

statepairs = [[1,1];[2,2];[3,3];[4,4];[5,5];[6,6];[7,7];[8,8];[9,9];[10,10];
    [11,11];[12,12];[13,13];[14,14];[15,15];[16,16];[17,17];[18,18];[19,19];[20,20];
    [21,21];[22,22];[23,23];[24,24];[25,25];[26,26];[27,27];[28,28];[29,29];[30,30];
    [31,31];[32,32];[33,33];[34,34];[35,35];[36,36];[37,37];[38,38];[39,39];[40,40];
    [41,41];[42,42];[43,43];[44,44];[45,45];[46,46];[47,47];[48,48];[49,49];[50,50];
    [51,51];[52,52];[53,53];[54,54];[55,55];[56,56];[57,57];[58,58];[59,59];[60,60];
    [61,61];[62,62];[63,63];[64,64];[65,65];[66,66];[67,67];[68,68];[69,69];[70,70]];

statepairsH = [[1,1];[2,2];[3,3];[4,4];[5,5];[6,6];[7,7];[8,8];[9,9];[10,10];
    [11,11];[12,12];[13,13];[14,14];[15,15];[16,16];[17,17];[18,18];[19,19];[20,20];
    [21,21];[22,22];[23,23];[24,24];[25,25];[26,26];[27,27];[28,28];[29,29];[30,30];
    [31,31];[32,32];[33,33];[34,34];[35,35];[36,36];[37,37];[38,38];[39,39];[40,40];
    [41,41];[42,42];[43,43];[44,44];[45,45];[46,46];[47,47];[48,48];[49,49];[50,50];
    [51,51];[52,52];[53,53];[54,54];[55,55];[56,56];[57,57];[58,58];[59,59];[60,60];
    [61,61];[62,62];[63,63];[64,64];[65,65];[66,66];[67,67];[68,68];[69,69];[70,70];
    [1,101];[2,102];[3,103];[4,104];[5,105];[6,106];[7,107];[8,108];[9,109];[10,110];
    [11,111];[12,112];[13,113];[14,114];[15,115];[16,116];[17,117];[18,118];[19,119];[20,120];
    [21,121];[22,122];[23,123];[24,124];[25,125];[26,126];[27,127];[28,128];[29,129];[30,130];
    [31,131];[32,132];[33,133];[34,134];[35,135];[36,136];[37,137];[38,138];[39,139];[40,140];
    [41,141];[42,142];[43,143];[44,144];[45,145];[46,146];[47,147];[48,148];[49,149];[50,150];
    [51,151];[52,152];[53,153];[54,154];[55,155];[56,156];[57,157];[58,158];[59,159];[60,160];
    [61,161];[62,162];[63,163];[64,164];[65,165];[66,166];[67,167];[68,168];[69,169];[70,170]];

statepair_ban=[66,0;
               65,0;
               64,0;
               63,0;
               62,0;
               61,0;
               51,0;
               54,0;
               44,0;
               43,0;
               42,0;
               41,0;
               31,0];

%Specifications
mutex('E12', 'G1', 'G2', statepairs);
mutex('E1H', 'G1', 'H1', statepairsH);
mutex('E2H', 'G2', 'H1', statepairsH);
mutex('E1ban','G1','Eban',statepair_ban);
mutex('E2ban','G2','Eban',statepair_ban);

sync('E', 'E12', 'E1H', 'E2H', 'E1ban', 'E2ban');

allevents('ALLPLANT', 'PLANT');
sync('SPEC', 'E', 'ALLPLANT');

supcon('SUP', 'PLANT', 'SPEC');

condat('SUPD', 'PLANT', 'SUP');

printdes('SUP');
printdat('SUPD');
end
